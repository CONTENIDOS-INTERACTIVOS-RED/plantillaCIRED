{"remainingRequest":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/plantillaCIRED/plantillaCIRED/src/components/TarjetaAudio.vue?vue&type=style&index=0&lang=sass&","dependencies":[{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/src/components/TarjetaAudio.vue","mtime":1737080005132},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5iZy1idG4KICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQgIWltcG9ydGFudAoudGFyamV0YS1hdWRpbwogIGJvcmRlci1jb2xvcjogcmVkCiAgLnRhcmpldGEtYXVkaW9fX2lucHV0CiAgICBpbnB1dFt0eXBlPXJhbmdlXQogICAgICBiYWNrZ3JvdW5kOiByZ2JhKHJlZCwgMC4yKQogICAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQocmVkLCByZWQpCiAgICAgICY6Oi13ZWJraXQtc2xpZGVyLXJ1bm5hYmxlLXRyYWNrCiAgICAgICAgYmFja2dyb3VuZDogcmdiYShyZWQsIDAuMikKICAgICAgJjo6LXdlYmtpdC1zbGlkZXItdGh1bWIKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQKICAgICAgJjo6LW1vei1yYW5nZS10aHVtYgogICAgICAgIGJhY2tncm91bmQtY29sb3I6IHJlZAo="},{"version":3,"sources":["TarjetaAudio.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TarjetaAudio.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"pug\">\n  .tarjeta-audio.p-4\n    .row.align-items-center\n      .col-auto.ps-0\n        .audio.position-relative(@mouseover.once=\"$emit('audio-hover')\")\n          slot\n          .spinner-border.spinner-border-sm(v-if=\"!audioCanPlay\" role=\"status\")\n            span.visually-hidden Loading..\n          button.audio__btn(v-else-if=\"state ==='pause'\"  @click=\"play\")\n            img(src=\"@/assets/template/audio-new.svg\")\n          button.audio__btn(v-else @click=\"pause\")\n            img(src=\"@/assets/template/audio-new.svg\")\n      .col\n        .d-flex.justify-content-between.mb-4\n          .tarjeta-audio__texto.text-smaller.mb-2(v-html=\"texto\")\n          .audio.position-relative(style=\"width: 36px\" @mouseover.once=\"$emit('audio-hover')\")\n            .spinner-border.spinner-border-sm(v-if=\"!audioCanPlay\" role=\"status\")\n              span.visually-hidden Loading..\n            button.audio__btn.bg-btn(v-else-if=\"state ==='pause'\"  @click=\"play\")\n              img(src=\"@/assets/template/audio.svg\")\n            button.audio__btn.bg-btn(v-else @click=\"pause\")\n              img(src=\"@/assets/template/pause.svg\")\n        .tarjeta-audio__input.mt-2(v-if=\"!noBarra\")\n          input(\n            v-model=\"sliderVal\",\n            type=\"range\", \n            max=\"100\", \n            :style=\"{'background-size': `${sliderVal}% 100%`}\",\n            @input=\"onSliderMove\"\n          )\n        .tarjeta-audio__tiempo.text-end.pt-1(v-if=\"tiempo\")\n          span {{currentTimeDisplay}}\n          span {{audioDurationDisplay}}\n  \n  </template>\n\n<script>\nimport audioMixins from '../mixins/audioMixins'\nexport default {\n  name: 'TarjetaAudio',\n  mixins: [audioMixins],\n  props: {\n    texto: {\n      type: String,\n      required: true,\n    },\n    noBarra: {\n      type: Boolean,\n      default: false,\n    },\n    tiempo: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data: () => ({\n    sliderVal: 0,\n  }),\n  watch: {\n    currentTime() {\n      this.sliderVal = (this.currentTime / this.audioDuration) * 100\n    },\n  },\n  methods: {\n    onSliderMove() {\n      this.audioElement.currentTime =\n        (this.sliderVal / 100) * this.audioDuration\n    },\n  },\n}\n</script>\n\n<style lang=\"sass\">\n.bg-btn\n  background-color: red !important\n.tarjeta-audio\n  border-color: red\n  .tarjeta-audio__input\n    input[type=range]\n      background: rgba(red, 0.2)\n      background-image: linear-gradient(red, red)\n      &::-webkit-slider-runnable-track\n        background: rgba(red, 0.2)\n      &::-webkit-slider-thumb\n        background-color: red\n      &::-moz-range-thumb\n        background-color: red\n</style>\n"]}]}