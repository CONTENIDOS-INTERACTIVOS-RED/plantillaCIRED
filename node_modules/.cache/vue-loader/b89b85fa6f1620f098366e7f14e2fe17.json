{"remainingRequest":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/plantillaCIRED/plantillaCIRED/src/views/curso/Tema2.vue?vue&type=template&id=3eb48400&lang=pug&","dependencies":[{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/src/views/curso/Tema2.vue","mtime":1737080005136},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}