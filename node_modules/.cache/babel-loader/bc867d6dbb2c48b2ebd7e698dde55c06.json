{"remainingRequest":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/thread-loader/dist/cjs.js!/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/babel-loader/lib/index.js!/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/plantillaCIRED/plantillaCIRED/src/components/plantilla/ScrollHorizontal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/src/components/plantilla/ScrollHorizontal.vue","mtime":1737080005133},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/babel.config.js","mtime":1737080005057},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnU2Nyb2xsSG9yaXpvbnRhbCcsCiAgcHJvcHM6IHsKICAgIHNlbGVjdGVkSWQ6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIGl0ZW1GdWxsV2lkdGg6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICByb3c6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzY3JvbGxWYWw6IDAsCiAgICAgIGlkczogW10KICAgIH07CiAgfSwKICB3YXRjaDogewogICAgc2VsZWN0ZWRJZDogZnVuY3Rpb24gc2VsZWN0ZWRJZChuZXdWYWwpIHsKICAgICAgaWYgKG5ld1ZhbC5sZW5ndGgpIHsKICAgICAgICB0aGlzLnNjcm9sbCgpOwogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5nZXRDb3JkcygpOwogICAgdGhpcy5zY3JvbGwoKTsKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNjcm9sbCk7CiAgfSwKICB1cGRhdGVkOiBmdW5jdGlvbiB1cGRhdGVkKCkgewogICAgdGhpcy5nZXRDb3JkcygpOwogIH0sCiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHsKICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNjcm9sbCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBzY3JvbGw6IGZ1bmN0aW9uIHNjcm9sbCgpIHsKICAgICAgdmFyIF90aGlzJGlkcyRmaW5kLAogICAgICAgICAgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIHNlbGVjdGVkRWxlbWVudElkID0gKF90aGlzJGlkcyRmaW5kID0gdGhpcy5pZHMuZmluZChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLmlkID09PSBfdGhpcy5zZWxlY3RlZElkOwogICAgICB9KSkgPT09IG51bGwgfHwgX3RoaXMkaWRzJGZpbmQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF90aGlzJGlkcyRmaW5kLmlkOwogICAgICB2YXIgc2VsZWN0ZWRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoc2VsZWN0ZWRFbGVtZW50SWQpOwogICAgICBpZiAoIU9iamVjdC5rZXlzKHRoaXMuJHNsb3RzLmRlZmF1bHQpLmxlbmd0aCB8fCAhdGhpcy5zZWxlY3RlZElkLmxlbmd0aCB8fCBzZWxlY3RlZEVsZW1lbnQgPT09IG51bGwpIHJldHVybjsKICAgICAgdmFyIGNvbnRhaW5lciA9IHRoaXMuJHJlZnMuaENvbnRhaW5lcjsKICAgICAgdmFyIHNjcm9sbENvbnRlbnRUb3RhbFdpZHRoID0gc2VsZWN0ZWRFbGVtZW50Lm9mZnNldFdpZHRoICogdGhpcy5pZHMubGVuZ3RoOwogICAgICB2YXIgbmV3U2Nyb2xsVmFsID0gc2VsZWN0ZWRFbGVtZW50Lm9mZnNldExlZnQ7CiAgICAgIHZhciBlbGVtZW50c0ZpdEluQ29udGFpbmVyID0gY29udGFpbmVyLm9mZnNldFdpZHRoIC8gc2VsZWN0ZWRFbGVtZW50Lm9mZnNldFdpZHRoOwoKICAgICAgaWYgKGVsZW1lbnRzRml0SW5Db250YWluZXIgPiAxICYmIHNjcm9sbENvbnRlbnRUb3RhbFdpZHRoIC0gbmV3U2Nyb2xsVmFsIDwgY29udGFpbmVyLm9mZnNldFdpZHRoKSB7CiAgICAgICAgbmV3U2Nyb2xsVmFsID0gc2Nyb2xsQ29udGVudFRvdGFsV2lkdGggLSBjb250YWluZXIub2Zmc2V0V2lkdGg7CiAgICAgIH0KCiAgICAgIHRoaXMuc2Nyb2xsVmFsID0gdGhpcy5pZHMubGVuZ3RoID09PSAxID8gMCA6IC1uZXdTY3JvbGxWYWw7CiAgICB9LAogICAgZ2V0Q29yZHM6IGZ1bmN0aW9uIGdldENvcmRzKCkgewogICAgICBpZiAodGhpcy4kc2xvdHMuZGVmYXVsdCkgewogICAgICAgIHRoaXMuaWRzID0gdGhpcy4kc2xvdHMuZGVmYXVsdC5tYXAoZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGlkOiBlbGVtZW50LmVsbS5pZCwKICAgICAgICAgICAga2V5OiBlbGVtZW50LmtleQogICAgICAgICAgfTsKICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["ScrollHorizontal.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAUA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,aAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KALA;AASA,IAAA,GAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AATA,GAFA;AAgBA,EAAA,IAhBA,kBAgBA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,CADA;AAEA,MAAA,GAAA,EAAA;AAFA,KAAA;AAIA,GArBA;AAsBA,EAAA,KAAA,EAAA;AACA,IAAA,UADA,sBACA,MADA,EACA;AACA,UAAA,MAAA,CAAA,MAAA,EAAA;AACA,aAAA,MAAA;AACA;AACA;AALA,GAtBA;AA6BA,EAAA,OA7BA,qBA6BA;AACA,SAAA,QAAA;AACA,SAAA,MAAA;AACA,IAAA,MAAA,CAAA,gBAAA,CAAA,QAAA,EAAA,KAAA,MAAA;AACA,GAjCA;AAkCA,EAAA,OAlCA,qBAkCA;AACA,SAAA,QAAA;AACA,GApCA;AAqCA,EAAA,aArCA,2BAqCA;AACA,IAAA,MAAA,CAAA,mBAAA,CAAA,QAAA,EAAA,KAAA,MAAA;AACA,GAvCA;AAwCA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA;AAAA;;AACA,UAAA,iBAAA,qBAAA,KAAA,GAAA,CAAA,IAAA,CACA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,EAAA,KAAA,KAAA,CAAA,UAAA;AAAA,OADA,CAAA,mDAAA,eAEA,EAFA;AAGA,UAAA,eAAA,GAAA,QAAA,CAAA,cAAA,CAAA,iBAAA,CAAA;AACA,UACA,CAAA,MAAA,CAAA,IAAA,CAAA,KAAA,MAAA,CAAA,OAAA,EAAA,MAAA,IACA,CAAA,KAAA,UAAA,CAAA,MADA,IAEA,eAAA,KAAA,IAHA,EAKA;AACA,UAAA,SAAA,GAAA,KAAA,KAAA,CAAA,UAAA;AACA,UAAA,uBAAA,GACA,eAAA,CAAA,WAAA,GAAA,KAAA,GAAA,CAAA,MADA;AAEA,UAAA,YAAA,GAAA,eAAA,CAAA,UAAA;AACA,UAAA,sBAAA,GACA,SAAA,CAAA,WAAA,GAAA,eAAA,CAAA,WADA;;AAEA,UACA,sBAAA,GAAA,CAAA,IACA,uBAAA,GAAA,YAAA,GAAA,SAAA,CAAA,WAFA,EAGA;AACA,QAAA,YAAA,GAAA,uBAAA,GAAA,SAAA,CAAA,WAAA;AACA;;AACA,WAAA,SAAA,GAAA,KAAA,GAAA,CAAA,MAAA,KAAA,CAAA,GAAA,CAAA,GAAA,CAAA,YAAA;AACA,KAzBA;AA0BA,IAAA,QA1BA,sBA0BA;AACA,UAAA,KAAA,MAAA,CAAA,OAAA,EAAA;AACA,aAAA,GAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,UAAA,OAAA;AAAA,iBAAA;AACA,YAAA,EAAA,EAAA,OAAA,CAAA,GAAA,CAAA,EADA;AAEA,YAAA,GAAA,EAAA,OAAA,CAAA;AAFA,WAAA;AAAA,SAAA,CAAA;AAIA;AACA;AAjCA;AAxCA,CAAA","sourcesContent":["<template lang=\"pug\">\n.horizontal-scroll__wrapper(ref=\"hContainer\")\n  .horizontal-scroll(\n    :class=\"[{'horizontal-scroll--item-fw':itemFullWidth},{'row':row}]\"\n    :style=\"[{transform: `translate(${scrollVal}px,0px)`}]\"\n  )\n    slot\n</template>\n\n<script>\nexport default {\n  name: 'ScrollHorizontal',\n  props: {\n    selectedId: {\n      type: String,\n      default: '',\n    },\n    itemFullWidth: {\n      type: Boolean,\n      default: false,\n    },\n    row: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      scrollVal: 0,\n      ids: [],\n    }\n  },\n  watch: {\n    selectedId(newVal) {\n      if (newVal.length) {\n        this.scroll()\n      }\n    },\n  },\n  mounted() {\n    this.getCords()\n    this.scroll()\n    window.addEventListener('resize', this.scroll)\n  },\n  updated() {\n    this.getCords()\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.scroll)\n  },\n  methods: {\n    scroll() {\n      const selectedElementId = this.ids.find(\n        item => item.id === this.selectedId,\n      )?.id\n      const selectedElement = document.getElementById(selectedElementId)\n      if (\n        !Object.keys(this.$slots.default).length ||\n        !this.selectedId.length ||\n        selectedElement === null\n      )\n        return\n      const container = this.$refs.hContainer\n      const scrollContentTotalWidth =\n        selectedElement.offsetWidth * this.ids.length\n      let newScrollVal = selectedElement.offsetLeft\n      const elementsFitInContainer =\n        container.offsetWidth / selectedElement.offsetWidth\n      if (\n        elementsFitInContainer > 1 &&\n        scrollContentTotalWidth - newScrollVal < container.offsetWidth\n      ) {\n        newScrollVal = scrollContentTotalWidth - container.offsetWidth\n      }\n      this.scrollVal = this.ids.length === 1 ? 0 : -newScrollVal\n    },\n    getCords() {\n      if (this.$slots.default) {\n        this.ids = this.$slots.default.map(element => ({\n          id: element.elm.id,\n          key: element.key,\n        }))\n      }\n    },\n  },\n}\n</script>\n\n<style lang=\"sass\" scoped>\n.horizontal-scroll__wrapper\n  overflow: hidden\n.horizontal-scroll\n  display: flex\n  transition: transform 0.5s ease-in-out\n  align-items: center\n  flex-wrap: nowrap\n  &:not(.row)\n    width: 100%\n  &--item-fw\n    & ::v-deep > div\n      flex-grow: 0\n      flex-shrink: 0\n      width: 100%\n      margin: 0 !important\n</style>\n"],"sourceRoot":"src/components/plantilla"}]}