{"remainingRequest":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/thread-loader/dist/cjs.js!/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/babel-loader/lib/index.js!/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/plantillaCIRED/plantillaCIRED/src/components/ImagenInfografica.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/src/components/ImagenInfografica.vue","mtime":1737080005131},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/babel.config.js","mtime":1737080005057},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/plantillaCIRED/plantillaCIRED/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgY29tcG9uZW50U2xvdE1peGlucyBmcm9tICcuLi9taXhpbnMvY29tcG9uZW50U2xvdE1peGlucyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnSW1hZ2VuSW5mb2dyYWZpY2EnLAogIG1peGluczogW2NvbXBvbmVudFNsb3RNaXhpbnNdLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmaXJzdFNlbGVjdGlvbjogZmFsc2UsCiAgICAgIHNob3dJbmRpY2F0b3I6IHRydWUKICAgIH07CiAgfSwKICBjb21wdXRlZDogewogICAgZmlyc3RFbGVtZW50OiBmdW5jdGlvbiBmaXJzdEVsZW1lbnQoKSB7CiAgICAgIHJldHVybiB0aGlzLmVsZW1lbnRzLmxlbmd0aCAmJiB0aGlzLmVsZW1lbnRzWzBdOwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIHNlbGVjdGVkOiBmdW5jdGlvbiBzZWxlY3RlZCgpIHsKICAgICAgaWYgKHRoaXMuc2hvd0luZGljYXRvcikgewogICAgICAgIHRoaXMuc2hvd0luZGljYXRvciA9IGZhbHNlOwogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRDYXJkQ29yZHM6IGZ1bmN0aW9uIGdldENhcmRDb3JkcyhjYXJkSWQpIHsKICAgICAgdmFyIHJlZiA9ICdjYXJkLXJlZi0nICsgY2FyZElkOwoKICAgICAgaWYgKCEocmVmIGluIHRoaXMuJHJlZnMpKSB7CiAgICAgICAgcmV0dXJuIFt7CiAgICAgICAgICB0b3A6IDAKICAgICAgICB9LCB7CiAgICAgICAgICBsZWZ0OiAwCiAgICAgICAgfV07CiAgICAgIH0KCiAgICAgIHZhciBjdXJyZW50Q2FyZCA9IHRoaXMuZWxlbWVudHMuZmluZChmdW5jdGlvbiAoY2FyZCkgewogICAgICAgIHJldHVybiBjYXJkLmlkID09PSBjYXJkSWQ7CiAgICAgIH0pOwogICAgICB2YXIgaW1nRWxlbWVudCA9IHRoaXMuJHJlZnNbJ2ltZy1yZWYtJyArIHRoaXMubWFpbklkXTsKICAgICAgdmFyIGltZ09iaiA9IHsKICAgICAgICB3OiBpbWdFbGVtZW50LmNsaWVudFdpZHRoLAogICAgICAgIGg6IGltZ0VsZW1lbnQuY2xpZW50SGVpZ2h0CiAgICAgIH07CiAgICAgIHZhciBjYXJkRWxlbWVudCA9IHRoaXMuJHJlZnNbcmVmXVswXTsKICAgICAgdmFyIGNhcmRPYmogPSB7CiAgICAgICAgeDogcGFyc2VJbnQoY3VycmVudENhcmQueCwgMTApLAogICAgICAgIHk6IHBhcnNlSW50KGN1cnJlbnRDYXJkLnksIDEwKSwKICAgICAgICB3OiBjYXJkRWxlbWVudC5jbGllbnRXaWR0aCwKICAgICAgICBoOiBjYXJkRWxlbWVudC5jbGllbnRIZWlnaHQKICAgICAgfTsKICAgICAgdmFyIGNhcmRQb3NZID0gY2FyZE9iai55IC8gMTAwICogaW1nT2JqLmg7CiAgICAgIHZhciBjYXJkUG9zWCA9IGNhcmRPYmoueCAvIDEwMCAqIGltZ09iai53OwogICAgICB2YXIgZmluYWxPYmogPSBbXTsKCiAgICAgIGlmIChjYXJkUG9zWSArIGNhcmRPYmouaCA+IGltZ09iai5oKSB7CiAgICAgICAgZmluYWxPYmoucHVzaCh7CiAgICAgICAgICBib3R0b206IDAKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBmaW5hbE9iai5wdXNoKHsKICAgICAgICAgIHRvcDogY3VycmVudENhcmQueQogICAgICAgIH0pOwogICAgICB9CgogICAgICBpZiAoY2FyZFBvc1ggKyBjYXJkT2JqLncgPiBpbWdPYmoudykgewogICAgICAgIGZpbmFsT2JqLnB1c2goewogICAgICAgICAgcmlnaHQ6IDAKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBmaW5hbE9iai5wdXNoKHsKICAgICAgICAgIGxlZnQ6IGN1cnJlbnRDYXJkLngKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgcmV0dXJuIGZpbmFsT2JqOwogICAgfQogIH0KfTs="},{"version":3,"sources":["ImagenInfografica.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,OAAA,mBAAA,MAAA,+BAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,mBADA;AAEA,EAAA,MAAA,EAAA,CAAA,mBAAA,CAFA;AAGA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,cAAA,EAAA,KADA;AAEA,MAAA,aAAA,EAAA;AAFA,KAAA;AAAA,GAHA;AAOA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,aAAA,KAAA,QAAA,CAAA,MAAA,IAAA,KAAA,QAAA,CAAA,CAAA,CAAA;AACA;AAHA,GAPA;AAYA,EAAA,KAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,UAAA,KAAA,aAAA,EAAA;AACA,aAAA,aAAA,GAAA,KAAA;AACA;AACA;AALA,GAZA;AAmBA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,MADA,EACA;AACA,UAAA,GAAA,GAAA,cAAA,MAAA;;AACA,UAAA,EAAA,GAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AACA,eAAA,CAAA;AAAA,UAAA,GAAA,EAAA;AAAA,SAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA,CAAA;AACA;;AAEA,UAAA,WAAA,GAAA,KAAA,QAAA,CAAA,IAAA,CAAA,UAAA,IAAA;AAAA,eAAA,IAAA,CAAA,EAAA,KAAA,MAAA;AAAA,OAAA,CAAA;AACA,UAAA,UAAA,GAAA,KAAA,KAAA,CAAA,aAAA,KAAA,MAAA,CAAA;AACA,UAAA,MAAA,GAAA;AACA,QAAA,CAAA,EAAA,UAAA,CAAA,WADA;AAEA,QAAA,CAAA,EAAA,UAAA,CAAA;AAFA,OAAA;AAIA,UAAA,WAAA,GAAA,KAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AACA,UAAA,OAAA,GAAA;AACA,QAAA,CAAA,EAAA,QAAA,CAAA,WAAA,CAAA,CAAA,EAAA,EAAA,CADA;AAEA,QAAA,CAAA,EAAA,QAAA,CAAA,WAAA,CAAA,CAAA,EAAA,EAAA,CAFA;AAGA,QAAA,CAAA,EAAA,WAAA,CAAA,WAHA;AAIA,QAAA,CAAA,EAAA,WAAA,CAAA;AAJA,OAAA;AAOA,UAAA,QAAA,GAAA,OAAA,CAAA,CAAA,GAAA,GAAA,GAAA,MAAA,CAAA,CAAA;AACA,UAAA,QAAA,GAAA,OAAA,CAAA,CAAA,GAAA,GAAA,GAAA,MAAA,CAAA,CAAA;AAEA,UAAA,QAAA,GAAA,EAAA;;AAEA,UAAA,QAAA,GAAA,OAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA;AAAA,UAAA,MAAA,EAAA;AAAA,SAAA;AACA,OAFA,MAEA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA;AAAA,UAAA,GAAA,EAAA,WAAA,CAAA;AAAA,SAAA;AACA;;AAEA,UAAA,QAAA,GAAA,OAAA,CAAA,CAAA,GAAA,MAAA,CAAA,CAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA;AAAA,UAAA,KAAA,EAAA;AAAA,SAAA;AACA,OAFA,MAEA;AACA,QAAA,QAAA,CAAA,IAAA,CAAA;AAAA,UAAA,IAAA,EAAA,WAAA,CAAA;AAAA,SAAA;AACA;;AAEA,aAAA,QAAA;AACA;AAvCA;AAnBA,CAAA","sourcesContent":["<template lang=\"pug\">\n.img-infografica\n  .img-infografica__img(:ref=\"'img-ref-'+mainId\")\n    slot(name=\"imagen\")\n  .img-infografica__content(v-if=\"elements.length\")\n    .img-infografica__item(\n        v-for=\"(item, index) in elements\"\n        :key=\"'img-infografica-btn-'+item.id\"\n        :style=\"[{top: item.y},{left: item.x}]\"\n        @mouseover=\"selected = item.id\"\n        @mouseleave=\"selected = 0\"\n      )\n      .img-infografica__item__dot\n      .img-infografica__item__numero(v-if=\"item.hasOwnProperty('numero')\") {{item.numero}}\n    .img-infografica__card(\n      v-for=\"item in elements\"\n      :key=\"'img-infografica-card-'+item.id\"\n      :ref=\"'card-ref-'+item.id\"\n      :style=\"getCardCords(item.id)\"\n      :class=\"{'img-infografica__card--selected' : selected === item.id}\"\n      @mouseover=\"selected = item.id\"\n      @mouseleave=\"selected = 0\"\n      v-child=\"item.elm\"\n    )\n    .img-infografica__indicador(\n      v-if=\"firstElement && showIndicator\"\n      :style=\"[{top: firstElement.y},{left: firstElement.x}]\"\n    )\n      .indicador--hover\n\n  .hidden-slot\n    slot\n</template>\n\n<script>\nimport componentSlotMixins from '../mixins/componentSlotMixins'\nexport default {\n  name: 'ImagenInfografica',\n  mixins: [componentSlotMixins],\n  data: () => ({\n    firstSelection: false,\n    showIndicator: true,\n  }),\n  computed: {\n    firstElement() {\n      return this.elements.length && this.elements[0]\n    },\n  },\n  watch: {\n    selected() {\n      if (this.showIndicator) {\n        this.showIndicator = false\n      }\n    },\n  },\n  methods: {\n    getCardCords(cardId) {\n      const ref = 'card-ref-' + cardId\n      if (!(ref in this.$refs)) {\n        return [{ top: 0 }, { left: 0 }]\n      }\n\n      const currentCard = this.elements.find(card => card.id === cardId)\n      const imgElement = this.$refs['img-ref-' + this.mainId]\n      const imgObj = {\n        w: imgElement.clientWidth,\n        h: imgElement.clientHeight,\n      }\n      const cardElement = this.$refs[ref][0]\n      const cardObj = {\n        x: parseInt(currentCard.x, 10),\n        y: parseInt(currentCard.y, 10),\n        w: cardElement.clientWidth,\n        h: cardElement.clientHeight,\n      }\n\n      const cardPosY = (cardObj.y / 100) * imgObj.h\n      const cardPosX = (cardObj.x / 100) * imgObj.w\n\n      const finalObj = []\n\n      if (cardPosY + cardObj.h > imgObj.h) {\n        finalObj.push({ bottom: 0 })\n      } else {\n        finalObj.push({ top: currentCard.y })\n      }\n\n      if (cardPosX + cardObj.w > imgObj.w) {\n        finalObj.push({ right: 0 })\n      } else {\n        finalObj.push({ left: currentCard.x })\n      }\n\n      return finalObj\n    },\n  },\n}\n</script>\n\n<style lang=\"sass\"></style>\n"],"sourceRoot":"src/components"}]}